/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate"]("main",{

/***/ "./modules/sendForm.js":
/*!*****************************!*\
  !*** ./modules/sendForm.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ sendForm; }\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction sendForm() {\n  var errorMessage = \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A.<br> \\u041E\\u0431\\u0440\\u0430\\u0442\\u0438\\u0442\\u0435\\u0441\\u044C, \\u043F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043F\\u043E\\u0437\\u0436\\u0435.\",\n      thanks = document.getElementById(\"thanks\"),\n      formContentThanks = thanks.querySelector(\".form-content\").children[1],\n      check2 = document.getElementById(\"check2\"),\n      check = document.getElementById(\"check\"),\n      card_check = document.getElementById(\"card_check\"),\n      check1 = document.getElementById(\"check1\");\n  var checkAgree = document.querySelectorAll(\"form>input[name]\");\n  console.log(\"checkAgree\", checkAgree);\n\n  var forms = _toConsumableArray(document.forms);\n\n  console.log(forms);\n  /*отправлено, ошибка). В последних двух состояниях \r\n    необходимо заменить сам контент модального окна на оповещение. */\n\n  forms.forEach(function (form, index) {\n    //получаем чекбоксы\n    console.log(\"form[check]\", form[\"check\"]);\n    form.addEventListener(\"change\", function (event) {\n      var target = event.target;\n      var btn = form.querySelector(\"button\");\n      console.log(\"form['check']\", btn);\n\n      if (target === btn) {\n        console.log(\"pfikb d button\");\n\n        if (!form[\"check\"].checked) {\n          console.log(\"button is not actove\");\n          btn.disabled = true;\n          btn.style.opacity = \"0.5\";\n          btn.title = \"Необходимо подтвердить согласие на обработку данных.\";\n        } else {\n          btn.disabled = false;\n          btn.style.opacity = \"1\";\n          btn.title = \"\";\n        }\n      }\n    });\n    form.addEventListener(\"submit\", function (event) {\n      console.log(event);\n      event.preventDefault();\n      console.log('form[\"check\"].checked', form[\"check\"].checked);\n\n      if (!form[\"check\"].checked) {\n        console.log(\"зашли в асабимт\");\n        form[\"check\"].title(\"Необходимо подтвердить согласие на обработку данных.\");\n        return;\n      } // form.style.display = \"none\";\n      //проверка ,если все заполнено, то выводим сообщение в в отдельном окне, где-то там оно есть\n\n\n      var formData = new FormData(form);\n      var body = {};\n      console.log(form.elements);\n      formData.forEach(function (val, key) {\n        body[key] = val;\n      }), console.log(formData); // вызов обещания с передачей ему данных из форм\n\n      postData(body).then(function (response) {\n        //console.log(response);\n        if (response.status !== 200) {\n          throw new Error(\"Status network not 200\");\n        }\n\n        thanks.style.display = \"block\";\n      }) // ловим возможную ошибку\n      [\"catch\"](function (error) {\n        if (!!error) {\n          //console.log(error);\n          formContentThanks.innerHTML = errorMessage;\n        }\n      });\n      clearInputs();\n      closePopup();\n    });\n  });\n\n  function postData(body) {\n    return fetch(\"./server.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n  }\n\n  function clearInputs() {\n    var allInputs = document.querySelectorAll(\"input\");\n\n    var _iterator = _createForOfIteratorHelper(allInputs),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var input = _step.value;\n        input.value = \"\";\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  function closePopup() {\n    document.addEventListener(\"click\", function (event) {\n      var target = event.target;\n      if (target.closest(\"div\").matches(\".close-form, overlay\") || target.nadeName === \"BUTTON\") thanks.style.display = \"none\";\n    });\n  }\n}\n\n//# sourceURL=webpack:///./modules/sendForm.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "dd91e8cc4d97051c4547"; }
/******/ }();
/******/ 
/******/ }
);